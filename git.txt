git: dùng để quản lý file
tạo folder trước rồi git init
git diff: dùng trước git add, so sánh 2 file trước sau
git checkout -- tenFile / git restore tenFile: xóa thay đổi (undo) những file chưa lên staging, khôi phục về trạng thái trên repository (trước git add)
git add .
git reset HEAD <file> / git restore --staged <file>: đưa file trên staging về working


git log : các commit
git show + commit_id: nội dung commit

git brach: xem branch
git checkout -b feature/dog-class: tạo nhánh 'feature/dog-class' và chuyển sang nhánh đó
git checkout <branch>: chuyển branch

A<---B
chuyển sang A trước
rồi merge B
git checkout A
git merge B

git branch -D <branch>: xóa branch
git reset --soft <commit>: repository quay về commit đó, và đưa tất cả commit sau nó về staging, không thay đổi working hiện tại
git reset --mixed <commit>: ----------------------------, ----------------------- về working, không thay đổi working hiện tại
git reset --hard <commit>: ------------------------------, xóa mọi thay đổi trong working sau commit đó

tạo file .gitignore: tạo text chứa tên file không cần bỏ vào git

working directory: trên máy tính
staging area: đã git add
git repository: chỉ thêm được những file nằm trong staging area
gitk: xem bằng GUI



github: chia sẽ file
git remote add origin https://github.com/anhtus1/dog-cat-mouse.git
git remote -v: xem đang ở github nào
git push -u origin main
git push
git pull: tải commit mới nhất trên github về working

git push origin <branch>: thêm một branch mới lên github, hoặc push commit mới lên github


//leader mearge feature của partner
partner muốn merge branch vào main thì lên github
nhấn vào branch
tìm your branch, nhấn new pull request
leader vào file changed, review code và comment
parter chỉnh code ở working và push lên github
leader vào check và merge vào main
git branch -D <branch>: xóa branch sau khi merge
hoặc
leader muốn down code về mấy check
git fetch origin <branch>: down branch partner về máy
leader chuyển branch feature và tự check trên máy mình


//partner sửa xung đột với branch master và branch feature
+ chuyển sang branch master
+ pull commit mới nhất về
+ chuyển sang branch feature
+ gõ git rebase master
+ chỉnh xung đột
+ git add file xung đột
+ gõ git rebase --continue
+ xong git push origin <feature> -f: -f bởi vì git nó đã xóa các commit trước



